"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
"""
import base64
import re
from io import BytesIO
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from loguru import logger

from app.states.creative import CreativeStates
from app.keyboards.creative import (
    get_creative_forms_keyboard,
    get_kktu_keyboard,
    get_confirm_keyboard,
    get_main_menu_keyboard,
    get_navigation_keyboard,
    get_form_selection_keyboard,
    get_kktu_keyboard_with_nav,
    get_confirm_keyboard_with_nav,
    FORMS_WITH_MEDIA,
    FORMS_WITH_TEXT,
    CREATIVE_FORMS,
    KKTU_CODES
)
from app.services.mediascout import mediascout_api
from app.database import db

router = Router()


# –í–∞–ª–∏–¥–∞—Ü–∏—è URL
def validate_url(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ URL"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ http –∏–ª–∏ https
    url_pattern = re.compile(
        r'^https?://'  # http:// –∏–ª–∏ https://
        r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+[A-Z]{2,6}\.?|'  # –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è
        r'localhost|'  # –∏–ª–∏ localhost
        r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})'  # –∏–ª–∏ IP
        r'(?::\d+)?'  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç
        r'(?:/?|[/?]\S+)$', re.IGNORECASE)
    return url_pattern.match(url) is not None


@router.message(Command("menu"))
async def show_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        "üé® <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )


@router.callback_query(F.data == "create_creative")
async def start_creative_creation(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    await callback.answer()
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    await callback.message.edit_text(
        "üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –¥–ª—è —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∫—Ä–µ–∞—Ç–∏–≤–∞:",
        reply_markup=get_form_selection_keyboard()
    )
    await state.set_state(CreativeStates.select_form)


# ============ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ù–ê–í–ò–ì–ê–¶–ò–ò ============

@router.callback_query(F.data == "nav:cancel")
async def handle_cancel(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    await callback.answer()
    
    await callback.message.edit_text(
        "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


@router.callback_query(F.data == "nav:back")
async def handle_back(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥"""
    await callback.answer()
    
    current_state = await state.get_state()
    data = await state.get_data()
    form_code = data.get("form")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if current_state == CreativeStates.upload_media:
        # –° –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º—ã
        await callback.message.edit_text(
            "üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –¥–ª—è —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∫—Ä–µ–∞—Ç–∏–≤–∞:",
            reply_markup=get_form_selection_keyboard()
        )
        await state.set_state(CreativeStates.select_form)
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ñ–æ—Ä–º–µ
        await state.update_data(form=None, form_name=None)
    
    elif current_state == CreativeStates.enter_text:
        # –° –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –ª–∏–±–æ –∫ –º–µ–¥–∏–∞, –ª–∏–±–æ –∫ —Ñ–æ—Ä–º–µ
        if form_code and form_code in FORMS_WITH_MEDIA:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞
            form_name = data.get('form_name', form_code)
            await callback.message.edit_text(
                f"üìé <b>–§–æ—Ä–º–∞: {form_name}</b>\n\n"
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç):",
                reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
            )
            await state.set_state(CreativeStates.upload_media)
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–µ–¥–∏–∞
            await state.update_data(media_file_id=None, media_file_name=None, media_base64=None)
        else:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º—ã
            await callback.message.edit_text(
                "üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –¥–ª—è —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∫—Ä–µ–∞—Ç–∏–≤–∞:",
                reply_markup=get_form_selection_keyboard()
            )
            await state.set_state(CreativeStates.select_form)
            await state.update_data(form=None, form_name=None)
    
    elif current_state == CreativeStates.enter_advertiser_urls:
        # –° –≤–≤–æ–¥–∞ URL –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ç–µ–∫—Å—Ç—É –∏–ª–∏ –º–µ–¥–∏–∞
        if form_code and form_code in FORMS_WITH_TEXT:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤–≤–æ–¥—É —Ç–µ–∫—Å—Ç–∞
            form_name = data.get('form_name', form_code)
            await callback.message.edit_text(
                f"üìù <b>–§–æ—Ä–º–∞: {form_name}</b>\n\n"
                "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫—Ä–µ–∞—Ç–∏–≤–∞:",
                reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
            )
            await state.set_state(CreativeStates.enter_text)
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—Å—Ç–µ
            await state.update_data(text_data=None)
        elif form_code and form_code in FORMS_WITH_MEDIA:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞
            form_name = data.get('form_name', form_code)
            await callback.message.edit_text(
                f"üìé <b>–§–æ—Ä–º–∞: {form_name}</b>\n\n"
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç):",
                reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
            )
            await state.set_state(CreativeStates.upload_media)
            await state.update_data(media_file_id=None, media_file_name=None, media_base64=None)
        else:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º—ã
            await callback.message.edit_text(
                "üé® <b>–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞ –¥–ª—è —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∫—Ä–µ–∞—Ç–∏–≤–∞:",
                reply_markup=get_form_selection_keyboard()
            )
            await state.set_state(CreativeStates.select_form)
            await state.update_data(form=None, form_name=None)
    
    elif current_state == CreativeStates.select_kktu:
        # –° –≤—ã–±–æ—Ä–∞ –ö–ö–¢–£ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤–≤–æ–¥—É URL
        await callback.message.edit_text(
            "üîó <b>–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (advertiserUrls)</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (URL) —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
            "<code>https://example.com, https://test.ru</code>\n\n"
            "‚ö†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã http –∏ https.\n"
            "üí° –≠—Ç–æ –ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ, –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
        )
        await state.set_state(CreativeStates.enter_advertiser_urls)
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ö–ö–¢–£
        await state.update_data(kktu_code=None, kktu_name=None)
    
    elif current_state == CreativeStates.confirm_creation:
        # –° –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –ö–ö–¢–£
        await callback.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–¥ –ö–ö–¢–£ (–∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏):",
            reply_markup=get_kktu_keyboard_with_nav(page=0, show_back=True)
        )
        await state.set_state(CreativeStates.select_kktu)


@router.callback_query(F.data.startswith("form:"), CreativeStates.select_form)
async def form_selected(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    await callback.answer()
    
    form_code = callback.data.split(":")[1]
    form_name = CREATIVE_FORMS.get(form_code, form_code)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–æ—Ä–º—É
    await state.update_data(form=form_code, form_name=form_name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –º–µ–¥–∏–∞-—Ñ–∞–π–ª
    if form_code in FORMS_WITH_MEDIA:
        await callback.message.edit_text(
            f"üìé <b>–§–æ—Ä–º–∞: {form_name}</b>\n\n"
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç):",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
        )
        await state.set_state(CreativeStates.upload_media)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç
    elif form_code in FORMS_WITH_TEXT:
        await callback.message.edit_text(
            f"üìù <b>–§–æ—Ä–º–∞: {form_name}</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫—Ä–µ–∞—Ç–∏–≤–∞:",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
        )
        await state.set_state(CreativeStates.enter_text)
    else:
        # –ï—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∏ –º–µ–¥–∏–∞, –Ω–∏ —Ç–µ–∫—Å—Ç - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ URL
        await callback.message.edit_text(
            "üîó <b>–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (advertiserUrls)</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (URL) —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
            "<code>https://example.com, https://test.ru</code>\n\n"
            "‚ö†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã http –∏ https.\n"
            "üí° –≠—Ç–æ –ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ, –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
        )
        await state.set_state(CreativeStates.enter_advertiser_urls)


@router.message(CreativeStates.upload_media, F.photo | F.video | F.audio | F.document)
async def media_uploaded(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞"""
    
    data = await state.get_data()
    form_code = data.get("form")
    
    # –ü–æ–ª—É—á–∞–µ–º file_id –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    file_id = None
    file_name = None
    file_obj = None
    file_type = None
    
    if message.photo:
        # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        file_obj = message.photo[-1]
        file_id = file_obj.file_id
        file_name = f"photo_{file_id}.jpg"
        file_type = "—Ñ–æ—Ç–æ"
    elif message.video:
        file_obj = message.video
        file_id = file_obj.file_id
        file_name = message.video.file_name or f"video_{file_id}.mp4"
        file_type = "–≤–∏–¥–µ–æ"
    elif message.audio:
        file_obj = message.audio
        file_id = file_obj.file_id
        file_name = message.audio.file_name or f"audio_{file_id}.mp3"
        file_type = "–∞—É–¥–∏–æ"
    elif message.document:
        file_obj = message.document
        file_id = file_obj.file_id
        file_name = message.document.file_name or f"document_{file_id}"
        file_type = "–¥–æ–∫—É–º–µ–Ω—Ç"
    
    if not file_id:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_msg = await message.answer(
        f"üì• –ü–æ–ª—É—á–µ–Ω–æ {file_type}: <code>{file_name}</code>\n"
        "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞..."
    )
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    try:
        file = await message.bot.get_file(file_id)
        file_bytes = BytesIO()
        await message.bot.download_file(file.file_path, file_bytes)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        file_base64 = base64.b64encode(file_bytes.getvalue()).decode('utf-8')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = len(file_bytes.getvalue())
        file_size_mb = file_size / (1024 * 1024)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await state.update_data(
            media_file_id=file_id,
            media_file_name=file_name,
            media_base64=file_base64
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        await processing_msg.delete()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –µ—â–µ —Ç–µ–∫—Å—Ç
        if form_code in FORMS_WITH_TEXT:
            await message.answer(
                f"‚úÖ –ú–µ–¥–∏–∞-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω\n\n"
                f"üìé <b>–§–∞–π–ª:</b> <code>{file_name}</code>\n"
                f"üìä <b>–†–∞–∑–º–µ—Ä:</b> {file_size_mb:.2f} –ú–ë\n\n"
                "üìù –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫—Ä–µ–∞—Ç–∏–≤–∞:",
                reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
            )
            await state.set_state(CreativeStates.enter_text)
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω—É–∂–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ URL
            await message.answer(
                f"‚úÖ –ú–µ–¥–∏–∞-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω\n\n"
                f"üìé <b>–§–∞–π–ª:</b> <code>{file_name}</code>\n"
                f"üìä <b>–†–∞–∑–º–µ—Ä:</b> {file_size_mb:.2f} –ú–ë\n\n"
                "üîó <b>–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏</b>\n\n"
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (URL), –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ –∫—Ä–µ–∞—Ç–∏–≤–µ.\n"
                "–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
                "<code>https://example.com, https://test.ru</code>\n\n"
                "‚ö†Ô∏è –°—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http –∏–ª–∏ https.\n"
                "üí° –≠—Ç–æ –ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ, –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.",
                reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
            )
            await state.set_state(CreativeStates.enter_advertiser_urls)
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞: {e}")
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        try:
            await processing_msg.delete()
        except:
            pass
        
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
        )


@router.message(CreativeStates.upload_media)
async def invalid_media(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞ –º–µ–¥–∏–∞"""
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ).",
        reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
    )


@router.message(CreativeStates.enter_text, F.text)
async def text_entered(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞"""
    
    text = message.text.strip()
    
    if len(text) < 1 or len(text) > 1000:
        await message.answer(
            "‚ùå –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    await state.update_data(text_data=text)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É URL
    await message.answer(
        f"‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)\n\n"
        "üîó <b>–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ (URL), –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ –∫—Ä–µ–∞—Ç–∏–≤–µ.\n"
        "–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "<code>https://example.com, https://test.ru</code>\n\n"
        "‚ö†Ô∏è –°—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http –∏–ª–∏ https.\n"
        "üí° –≠—Ç–æ –ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ, –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.",
        reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
    )
    await state.set_state(CreativeStates.enter_advertiser_urls)


@router.message(CreativeStates.enter_text)
async def invalid_text(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞"""
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
        reply_markup=get_navigation_keyboard(show_back=True, show_skip=False)
    )


# ============ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ADVERTISER URLS ============

@router.callback_query(F.data == "nav:skip_urls", CreativeStates.enter_advertiser_urls)
async def skip_advertiser_urls(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å–∫ –≤–≤–æ–¥–∞ —Ü–µ–ª–µ–≤—ã—Ö —Å—Å—ã–ª–æ–∫"""
    await callback.answer("–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã")
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ö–ö–¢–£
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£):",
        reply_markup=get_kktu_keyboard_with_nav(page=0, show_back=True)
    )
    await state.set_state(CreativeStates.select_kktu)


@router.message(CreativeStates.enter_advertiser_urls, F.text)
async def advertiser_urls_entered(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ü–µ–ª–µ–≤—ã—Ö —Å—Å—ã–ª–æ–∫"""
    
    text = message.text.strip()
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º –∏ –Ω–æ–≤—ã–º —Å—Ç—Ä–æ–∫–∞–º
    urls = []
    for line in text.split('\n'):
        for url in line.split(','):
            url = url.strip()
            if url:
                urls.append(url)
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è URL
    invalid_urls = []
    valid_urls = []
    
    for url in urls:
        if validate_url(url):
            valid_urls.append(url)
        else:
            invalid_urls.append(url)
    
    if invalid_urls:
        # –ï—Å—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ URL
        error_text = "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ URL –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã:\n\n"
        for url in invalid_urls[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            error_text += f"‚Ä¢ <code>{url}</code>\n"
        if len(invalid_urls) > 5:
            error_text += f"\n...–∏ –µ—â—ë {len(invalid_urls) - 5}\n"
        error_text += "\n‚ö†Ô∏è URL –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://\n"
        error_text += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —à–∞–≥."
        
        await message.answer(
            error_text,
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
        )
        return
    
    if not valid_urls:
        await message.answer(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ URL. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —à–∞–≥.",
            reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–ª–∏–¥–Ω—ã–µ URL
    await state.update_data(advertiser_urls=valid_urls)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ö–ö–¢–£
    await message.answer(
        f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Ü–µ–ª–µ–≤—ã—Ö —Å—Å—ã–ª–æ–∫: {len(valid_urls)}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£):",
        reply_markup=get_kktu_keyboard_with_nav(page=0, show_back=True)
    )
    await state.set_state(CreativeStates.select_kktu)


@router.message(CreativeStates.enter_advertiser_urls)
async def invalid_advertiser_urls(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ URL"""
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å URL.",
        reply_markup=get_navigation_keyboard(show_back=True, show_skip=True, skip_callback="nav:skip_urls")
    )


@router.callback_query(F.data.startswith("kktu_page:"), CreativeStates.select_kktu)
async def kktu_page_navigation(callback: CallbackQuery, state: FSMContext):
    """–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –ö–ö–¢–£"""
    await callback.answer()
    
    page = int(callback.data.split(":")[1])
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£):",
        reply_markup=get_kktu_keyboard_with_nav(page=page, show_back=True)
    )


@router.callback_query(F.data == "page_info", CreativeStates.select_kktu)
async def page_info_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    await callback.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü")


@router.callback_query(F.data.startswith("kktu:"), CreativeStates.select_kktu)
async def kktu_selected(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£)"""
    await callback.answer()
    
    kktu_code = callback.data.split(":")[1]
    kktu_name = KKTU_CODES.get(kktu_code, kktu_code)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£)
    await state.update_data(kktu_code=kktu_code, kktu_name=kktu_name)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    data = await state.get_data()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirmation_text = "üìã <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤–∞</b>\n\n"
    confirmation_text += f"üé® <b>–§–æ—Ä–º–∞:</b> {data.get('form_name')}\n"
    confirmation_text += f"üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£):</b> {kktu_code} - {kktu_name}\n"
    
    if data.get('text_data'):
        text_preview = data['text_data'][:100] + "..." if len(data['text_data']) > 100 else data['text_data']
        confirmation_text += f"üìù <b>–¢–µ–∫—Å—Ç:</b> {text_preview}\n"
    
    if data.get('media_file_name'):
        confirmation_text += f"üìé <b>–ú–µ–¥–∏–∞:</b> {data['media_file_name']}\n"
    
    if data.get('advertiser_urls'):
        urls_count = len(data['advertiser_urls'])
        confirmation_text += f"üîó <b>–¶–µ–ª–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏:</b> {urls_count} —à—Ç.\n"
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
        if urls_count > 0:
            first_url = data['advertiser_urls'][0]
            if len(first_url) > 50:
                first_url = first_url[:47] + "..."
            confirmation_text += f"   ‚Ä¢ {first_url}\n"
            if urls_count > 1:
                confirmation_text += f"   ‚Ä¢ ...–∏ –µ—â—ë {urls_count - 1}\n"
    
    confirmation_text += "\n‚ö†Ô∏è <b>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:</b>\n"
    confirmation_text += "‚Ä¢ –¢–∏–ø: –°–∞–º–æ—Ä–µ–∫–ª–∞–ºa (isSelfPromotion = true)\n"
    confirmation_text += "‚Ä¢ –¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏: Other\n\n"
    confirmation_text += "–°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤?"
    
    await callback.message.edit_text(
        confirmation_text,
        reply_markup=get_confirm_keyboard_with_nav()
    )
    await state.set_state(CreativeStates.confirm_creation)


@router.callback_query(F.data == "confirm:yes", CreativeStates.confirm_creation)
async def confirm_creation(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    await callback.answer()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    await callback.message.edit_text(
        "‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–∞...\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    
    # –°–æ–∑–¥–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤ —á–µ—Ä–µ–∑ API
    result = await mediascout_api.create_creative(
        form=data['form'],
        kktu_code=data['kktu_code'],
        media_base64=data.get('media_base64'),
        media_filename=data.get('media_file_name'),
        text_data=data.get('text_data'),
        description=data.get('text_data') if data['kktu_code'] == '30.15.1' else None,
        advertiser_urls=data.get('advertiser_urls')
    )
    
    if result.get('success'):
        # –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
        erid = result.get('erid')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            await db.save_creative(
                user_id=callback.from_user.id,
                form=data['form'],
                kktu_code=data['kktu_code'],
                erid=erid,
                media_file_id=data.get('media_file_id'),
                media_file_name=data.get('media_file_name'),
                text_data=data.get('text_data'),
                mediascout_id=result.get('id'),
                creative_group_id=result.get('creative_group_id'),
                creative_group_name=result.get('creative_group_name'),
                status="created"
            )
            logger.info(f"‚úÖ –ö—Ä–µ–∞—Ç–∏–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î: {erid}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞ –≤ –ë–î: {e}")
        
        success_text = "‚úÖ <b>–ö—Ä–µ–∞—Ç–∏–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
        success_text += f"üé´ <b>–¢–æ–∫–µ–Ω Erid:</b>\n<code>{erid}</code>\n\n"
        success_text += f"üìã <b>–§–æ—Ä–º–∞:</b> {data.get('form_name')}\n"
        success_text += f"üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£):</b> {data.get('kktu_code')} - {data.get('kktu_name')}\n\n"
        success_text += "üí° <i>–ß—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω Erid, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ</i>"
        
        await callback.message.edit_text(
            success_text,
            reply_markup=get_main_menu_keyboard()
        )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
    else:
        # –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        error_msg = result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        
        error_text = "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—Ä–µ–∞—Ç–∏–≤–∞</b>\n\n"
        error_text += f"üìù <b>–î–µ—Ç–∞–ª–∏:</b> {error_msg}\n\n"
        error_text += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        
        await callback.message.edit_text(
            error_text,
            reply_markup=get_main_menu_keyboard()
        )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()




@router.callback_query(F.data == "my_creatives")
async def show_my_creatives(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –∫—Ä–µ–∞—Ç–∏–≤—ã"""
    await callback.answer()
    
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    creatives = await db.get_user_creatives(user_id, limit=10)
    total_count = await db.get_user_creatives_count(user_id)
    
    if not creatives:
        await callback.message.edit_text(
            "üìã <b>–ú–æ–∏ –∫—Ä–µ–∞—Ç–∏–≤—ã</b>\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫—Ä–µ–∞—Ç–∏–≤–æ–≤.\n"
            "–ù–∞–∂–º–∏—Ç–µ \"üé® –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤\" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
            reply_markup=get_main_menu_keyboard()
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
    text = f"üìã <b>–ú–æ–∏ –∫—Ä–µ–∞—Ç–∏–≤—ã</b> (–≤—Å–µ–≥–æ: {total_count})\n\n"
    
    for idx, creative in enumerate(creatives, 1):
        status_emoji = "‚úÖ" if creative.status == "created" else "‚ùå"
        text += f"{status_emoji} <b>–ö—Ä–µ–∞—Ç–∏–≤ #{creative.id}</b>\n"
        text += f"   üé® –§–æ—Ä–º–∞: {CREATIVE_FORMS.get(creative.form, creative.form)}\n"
        text += f"   üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£): {creative.kktu_code}\n"
        
        if creative.erid:
            text += f"   üé´ Erid: <code>{creative.erid}</code>\n"
        
        if creative.status == "error" and creative.error_message:
            text += f"   ‚ùå –û—à–∏–±–∫–∞: {creative.error_message[:50]}...\n"
        
        text += f"   üìÖ –°–æ–∑–¥–∞–Ω: {creative.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
    
    if total_count > 10:
        text += f"<i>–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∏–∑ {total_count} –∫—Ä–µ–∞—Ç–∏–≤–æ–≤</i>"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_main_menu_keyboard()
    )


@router.callback_query(F.data == "help")
async def show_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
    await callback.answer()
    
    help_text = """
‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º</b>

<b>–ß—Ç–æ —Ç–∞–∫–æ–µ Erid?</b>
Erid (–º–∞—Ä–∫–µ—Ä) ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–∫–ª–∞–º—ã, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –≤ –∫–∞–∂–¥–æ–º —Ä–µ–∫–ª–∞–º–Ω–æ–º –∫—Ä–µ–∞—Ç–∏–≤–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–∫–æ–Ω—É –æ —Ä–µ–∫–ª–∞–º–µ.

<b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤?</b>
1. –ù–∞–∂–º–∏—Ç–µ "üé® –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤"
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∫—Ä–µ–∞—Ç–∏–≤–∞ (–±–∞–Ω–Ω–µ—Ä, —Ç–µ–∫—Å—Ç, –≤–∏–¥–µ–æ –∏ —Ç.–¥.)
3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
4. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
5. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏ (–ö–ö–¢–£)
6. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ
7. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω Erid

<b>–°–∞–º–æ—Ä–µ–∫–ª–∞–ºa</b>
–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç –∫—Ä–µ–∞—Ç–∏–≤—ã —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏.

<b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>
–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
"""
    
    await callback.message.edit_text(
        help_text,
        reply_markup=get_main_menu_keyboard()
    )

