"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


# –§–æ—Ä–º—ã –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ —Å –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
CREATIVE_FORMS = {
    "Banner": "–ë–∞–Ω–Ω–µ—Ä",
    "Text": "–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫",
    "TextGraphic": "–¢–µ–∫—Å—Ç. –≥—Ä–∞—Ñ. –±–ª–æ–∫",
    "Video": "–í–∏–¥–µ–æ—Ä–æ–ª–∏–∫",
    "Audio": "–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å",
    "AudioBroadcast": "–ê—É–¥–∏–æ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è",
    "VideoBroadcast": "–í–∏–¥–µ–æ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏",
    "TextVideoBlock": "–¢–µ–∫—Å—Ç. –±–ª–æ–∫ —Å –≤–∏–¥–µ–æ",
    "TextAudioBlock": "–¢–µ–∫—Å—Ç. –±–ª–æ–∫ —Å –∞—É–¥–∏–æ",
    "TextAudioVideoBlock": "–¢–µ–∫—Å—Ç. –±–ª–æ–∫ —Å –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ",
    "TextGraphicVideoBlock": "–¢–µ–∫—Å—Ç. –≥—Ä–∞—Ñ. –±–ª–æ–∫ —Å –≤–∏–¥–µ–æ",
    "TextGraphicAudioBlock": "–¢–µ–∫—Å—Ç. –≥—Ä–∞—Ñ. –±–ª–æ–∫ —Å –∞—É–¥–∏–æ",
    "TextGraphicAudioVideoBlock": "–¢–µ–∫—Å—Ç. –≥—Ä–∞—Ñ. –±–ª–æ–∫ —Å –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ",
    "BannerHtml5": "HTML5-–±–∞–Ω–Ω–µ—Ä",
}

# –§–æ—Ä–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –º–µ–¥–∏–∞-—Ñ–∞–π–ª
FORMS_WITH_MEDIA = [
    "Banner", "TextGraphic", "Video", "Audio", "AudioBroadcast",
    "VideoBroadcast", "TextVideoBlock", "TextAudioBlock", 
    "TextAudioVideoBlock", "TextGraphicVideoBlock", 
    "TextGraphicAudioBlock", "TextGraphicAudioVideoBlock", "BannerHtml5"
]

# –§–æ—Ä–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Ç–µ–∫—Å—Ç
FORMS_WITH_TEXT = [
    "Text", "TextGraphic", "TextVideoBlock", "TextAudioBlock",
    "TextAudioVideoBlock", "TextGraphicVideoBlock", 
    "TextGraphicAudioBlock", "TextGraphicAudioVideoBlock"
]

# –ö–æ–¥—ã –ö–ö–¢–£ (–∫–æ–¥—ã —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–±–æ—Ç, —É—Å–ª—É–≥)
KKTU_CODES = {
    "4.1.1": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –º—ã—Ç—å—è –ø–æ—Å—É–¥—ã",
    "4.1.2": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç–∏—Ä–∫–∏",
    "4.1.3": "–ß–∏—Å—Ç—è—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞",
    "4.1.4": "–ú–æ—é—â–∏–µ –∏ —á–∏—Å—Ç—è—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ (–ø—Ä–æ—á–µ–µ)",
    "4.2.1": "–°—Ä–µ–¥—Å—Ç–≤–∞ –±–æ—Ä—å–±—ã —Å –Ω–∞—Å–µ–∫–æ–º—ã–º–∏",
    "4.3.1": "–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —É—Ö–æ–¥—É –∑–∞ –æ–¥–µ–∂–¥–æ–π –∏ –æ–±—É–≤—å—é",
    "4.3.2": "–ë—ã—Ç–æ–≤–∞—è —Ö–∏–º–∏—è (—è–¥–æ—Ö–∏–º–∏–∫–∞—Ç—ã)",
    "4.3.3": "–ë—ã—Ç–æ–≤–∞—è —Ö–∏–º–∏—è (–ø—Ä–æ—á–µ–µ)",
    "15.1.1": "–î–µ—Ç—Å–∫–∏–π —à–∞–º–ø—É–Ω—å",
    "15.1.2": "–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —É—Ö–æ–¥—É –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏",
    "15.1.3": "–®–∞–º–ø—É–Ω—å",
    "15.1.4": "–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —É—Ö–æ–¥—É –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ (–ø—Ä–æ—á–µ–µ)",
    "15.2.1": "–ì–µ–ª—å –¥–ª—è –¥—É—à–∞",
    "15.2.2": "–ú—ã–ª–æ",
    "15.2.3": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –±—Ä–∏—Ç—å—è –∏ —ç–ø–∏–ª—è—Ü–∏–∏ (—Ä–∞–∑–Ω–æ–µ)",
    "15.2.4": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –∏ –ø–æ—Å–ª–µ –±—Ä–∏—Ç—å—è",
    "15.2.5": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–ª–æ—Å",
    "15.2.6": "–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —É—Ö–æ–¥—É –∑–∞ –∫–æ–∂–µ–π",
    "15.3.1": "–î–µ–∑–æ–¥–æ—Ä–∞–Ω—Ç—ã",
    "15.3.2": "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞",
    "15.3.3": "–ü–∞—Ä—Ñ—é–º–µ—Ä–∏—è",
    "15.3.4": "–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ —É—Ö–æ–¥—É –∑–∞ –Ω–æ–≥—Ç—è–º–∏",
    "15.3.5": "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –∏ –∑–¥–æ—Ä–æ–≤—å—è (—Ä–∞–∑–Ω–æ–µ)",
    "22.2.3": "–ü–æ–¥–≥—É–∑–Ω–∏–∫–∏",
    "22.2.4": "–°—Ä–µ–¥—Å—Ç–≤–∞ –≥–∏–≥–∏–µ–Ω—ã –¥–ª—è –¥–µ—Ç–µ–π",
    "22.2.5": "–°—Ä–µ–¥—Å—Ç–≤–∞ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≥–∏–≥–∏–µ–Ω—ã (–ø—Ä–æ—á–µ–µ)",
    "22.3.1": "–ó—É–±–Ω–∞—è –ø–∞—Å—Ç–∞",
    "22.3.2": "–ó—É–±–Ω—ã–µ —â–µ—Ç–∫–∏",
    "22.3.3": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –≥–∏–≥–∏–µ–Ω—ã —Ä—Ç–∞",
    "22.3.4": "–°—Ä–µ–¥—Å—Ç–≤–∞ –≥–∏–≥–∏–µ–Ω—ã (–ø—Ä–æ—á–µ–µ)",
    "26.3.1": "–°—Ä–µ–¥—Å—Ç–≤–∞ –¥–µ—Ç—Å–∫–æ–π –≥–∏–≥–∏–µ–Ω—ã",
}


def get_creative_forms_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    builder = InlineKeyboardBuilder()
    
    for code, description in CREATIVE_FORMS.items():
        builder.button(
            text=description,
            callback_data=f"form:{code}"
        )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    return builder.as_markup()


def get_kktu_keyboard(page: int = 0, items_per_page: int = 10) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–¥–∞ –ö–ö–¢–£ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤
    codes_list = list(KKTU_CODES.items())
    total_pages = (len(codes_list) + items_per_page - 1) // items_per_page
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    page_items = codes_list[start_idx:end_idx]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ–¥–æ–≤ –ö–ö–¢–£
    for code, description in page_items:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è
        short_desc = description[:35] + "..." if len(description) > 35 else description
        builder.button(
            text=f"{code} - {short_desc}",
            callback_data=f"kktu:{code}"
        )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"kktu_page:{page-1}"
        ))
    if page < total_pages - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è",
            callback_data=f"kktu_page:{page+1}"
        ))
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    builder.row(InlineKeyboardButton(
        text=f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ {total_pages}",
        callback_data="page_info"
    ))
    
    return builder.as_markup()


def get_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤", callback_data="confirm:yes")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm:no")
    
    builder.adjust(1)
    return builder.as_markup()


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="üé® –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤", callback_data="create_creative")
    builder.button(text="üìã –ú–æ–∏ –∫—Ä–µ–∞—Ç–∏–≤—ã", callback_data="my_creatives")
    builder.button(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
    
    builder.adjust(1)
    return builder.as_markup()


def get_skip_text_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_text")
    
    return builder.as_markup()


def get_navigation_keyboard(
    show_back: bool = True,
    show_skip: bool = False,
    back_callback: str = "nav:back",
    skip_callback: str = "nav:skip"
) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–∞–ø–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞
    
    Args:
        show_back: –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        show_skip: –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        back_callback: callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        skip_callback: callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    """
    builder = InlineKeyboardBuilder()
    
    buttons = []
    
    if show_skip:
        buttons.append(InlineKeyboardButton(
            text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
            callback_data=skip_callback
        ))
    
    if show_back:
        buttons.append(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=back_callback
        ))
    
    buttons.append(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="nav:cancel"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
    if len(buttons) == 3 and show_skip:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Å–µ —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏: –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –ù–∞–∑–∞–¥, –û—Ç–º–µ–Ω–∏—Ç—å
        builder.row(buttons[0])  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
        builder.row(buttons[1], buttons[2])  # –ù–∞–∑–∞–¥ –∏ –û—Ç–º–µ–Ω–∏—Ç—å –≤ —Ä—è–¥
    elif len(buttons) == 2:
        # –ï—Å–ª–∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏: –ù–∞–∑–∞–¥ –∏ –û—Ç–º–µ–Ω–∏—Ç—å
        builder.row(*buttons)
    else:
        # –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö
        for button in buttons:
            builder.row(button)
    
    return builder.as_markup()


def get_form_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã –∫—Ä–µ–∞—Ç–∏–≤–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = InlineKeyboardBuilder()
    
    for code, description in CREATIVE_FORMS.items():
        builder.button(
            text=description,
            callback_data=f"form:{code}"
        )
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
    builder.adjust(2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã (–±–µ–∑ "–ù–∞–∑–∞–¥", —Ç.–∫. —ç—Ç–æ –ø–µ—Ä–≤—ã–π —à–∞–≥)
    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="nav:cancel"
    ))
    
    return builder.as_markup()


def get_kktu_keyboard_with_nav(page: int = 0, items_per_page: int = 10, show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–¥–∞ –ö–ö–¢–£ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤
    codes_list = list(KKTU_CODES.items())
    total_pages = (len(codes_list) + items_per_page - 1) // items_per_page
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    page_items = codes_list[start_idx:end_idx]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ–¥–æ–≤ –ö–ö–¢–£
    for code, description in page_items:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è
        short_desc = description[:35] + "..." if len(description) > 35 else description
        builder.button(
            text=f"{code} - {short_desc}",
            callback_data=f"kktu:{code}"
        )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
            callback_data=f"kktu_page:{page-1}"
        ))
    if page < total_pages - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è",
            callback_data=f"kktu_page:{page+1}"
        ))
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    builder.row(InlineKeyboardButton(
        text=f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ {total_pages}",
        callback_data="page_info"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ù–∞–∑–∞–¥ –∏ –û—Ç–º–µ–Ω–∏—Ç—å)
    nav_row = []
    if show_back:
        nav_row.append(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="nav:back"
        ))
    nav_row.append(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="nav:cancel"
    ))
    builder.row(*nav_row)
    
    return builder.as_markup()


def get_confirm_keyboard_with_nav() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()
    
    builder.button(text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤", callback_data="confirm:yes")
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="nav:back"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="nav:cancel")
    )
    
    builder.adjust(1)
    return builder.as_markup()

